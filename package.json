{
	"name": "renpyWarp",
	"displayName": "Ren'Py Launch and Sync",
	"description": "Keep Ren'Py in sync with your code",
	"version": "1.10.0",
	"publisher": "PaisleySoftworks",
	"icon": "images/eileen.png",
	"engines": {
		"vscode": "^1.87.0"
	},
	"keywords": [
		"renpy"
	],
	"categories": [
		"Other"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/furudean/vscode-renpy-warp.git"
	},
	"activationEvents": [
		"onLanguage:renpy"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "renpyWarp.warpToLine",
				"title": "Open Ren'Py at line",
				"category": "Ren'Py Launch",
				"icon": "$(play)"
			},
			{
				"command": "renpyWarp.warpToFile",
				"title": "Open Ren'Py at file",
				"category": "Ren'Py Launch",
				"icon": "$(play)"
			},
			{
				"command": "renpyWarp.launch",
				"title": "Launch project in Ren'Py",
				"category": "Ren'Py Launch",
				"icon": "$(play)"
			},
			{
				"command": "renpyWarp.killAll",
				"title": "Kill active Ren'Py instances",
				"category": "Ren'Py Launch"
			},
			{
				"command": "renpyWarp.toggleFollowCursor",
				"title": "Toggle following cursor mode",
				"category": "Ren'Py Launch"
			},
			{
				"command": "renpyWarp.installRpe",
				"title": "Install Ren'Py extensions (.rpe)",
				"category": "Ren'Py Launch"
			},
			{
				"command": "renpyWarp.uninstallRpe",
				"title": "Uninstall Ren'Py extensions (.rpe)",
				"category": "Ren'Py Launch"
			},
			{
				"command": "renpyWarp.setSdkPath",
				"title": "Set Ren'Py SDK path",
				"category": "Ren'Py Launch"
			},
			{
				"command": "renpyWarp.setExtensionsPreference",
				"title": "Set Ren'Py extensions preference",
				"category": "Ren'Py Launch"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "renpyWarp.warpToLine",
					"when": "editorLangId == renpy"
				},
				{
					"command": "renpyWarp.warpToFile",
					"when": "editorLangId == renpy"
				},
				{
					"command": "renpyWarp.launch",
					"when": "workbenchState == 'folder' || editorLangId == renpy"
				},
				{
					"command": "renpyWarp.killAll",
					"when": "editorLangId == renpy"
				}
			],
			"editor/title/run": [
				{
					"command": "renpyWarp.warpToLine",
					"group": "renpywarp",
					"when": "editorLangId == renpy"
				}
			],
			"editor/context": [
				{
					"command": "renpyWarp.warpToLine",
					"group": "renpywarp",
					"when": "editorLangId == renpy"
				}
			],
			"editor/lineNumber/context": [
				{
					"command": "renpyWarp.warpToLine",
					"group": "renpywarp",
					"when": "editorLangId == renpy"
				}
			],
			"explorer/context": [
				{
					"command": "renpyWarp.warpToFile",
					"group": "renpywarp",
					"when": "resourceExtname == '.rpy'"
				}
			]
		},
		"keybindings": [
			{
				"command": "renpyWarp.warpToLine",
				"key": "alt+shift+e",
				"mac": "cmd+shift+e",
				"when": "editorTextFocus && editorLangId == renpy"
			},
			{
				"command": "renpyWarp.warpToFile",
				"key": "alt+shift+f",
				"mac": "cmd+shift+f",
				"when": "editorLangId == renpy"
			},
			{
				"command": "renpyWarp.launch",
				"key": "alt+shift+l",
				"mac": "cmd+shift+l",
				"when": "workbenchState == 'folder' || editorLangId == renpy"
			},
			{
				"command": "renpyWarp.killAll",
				"key": "alt+shift+k",
				"mac": "cmd+shift+k",
				"when": "editorLangId == renpy"
			},
			{
				"command": "renpyWarp.toggleFollowCursor",
				"key": "alt+shift+c",
				"mac": "cmd+shift+c",
				"when": "editorTextFocus && editorLangId == renpy"
			}
		],
		"configuration": {
			"title": "Ren'Py Launch and Sync",
			"properties": {
				"renpyWarp.sdkPath": {
					"type": "string",
					"markdownDescription": "Path to the Ren'Py SDK on this machine. The extension will not work without this set.\n\nThis should be an absolute path, or a path starting with `~` to indicate the home directory.",
					"order": 0,
					"scope": "machine-overridable"
				},
				"renpyWarp.strategy": {
					"type": "string",
					"default": "Update Window",
					"markdownDescription": "How to treat an existing Ren'Py instance when a warping command is issued",
					"order": 1,
					"enum": [
						"Update Window",
						"New Window",
						"Replace Window"
					],
					"markdownEnumDescriptions": [
						"Execute `renpy.warp_to_line()` in the open instance. This installs a .rpe file in your project.\n\n**Note**: This setting is is ignored if `#renpyWarp.renpyExtensionsEnabled#` is enabled.",
						"Launch a new instance when a command is executed.",
						"Kill the existing instance and launch a new one."
					]
				},
				"renpyWarp.followCursorMode": {
					"type": "string",
					"order": 2,
					"markdownDescription": "When in _Follow Cursor_ mode, what should be kept in sync?",
					"default": "Ren'Py updates Visual Studio Code",
					"enum": [
						"Ren'Py updates Visual Studio Code",
						"Visual Studio Code updates Ren'Py",
						"Update both"
					],
					"markdownEnumDescriptions": [
						"Editor will sync with current line in Ren'Py.",
						"Ren'Py will sync with current line in the editor.",
						"Try and keep both in sync.\n\n**Note**: Because of how warping works, this can be a bit janky."
					]
				},
				"renpyWarp.followCursorOnLaunch": {
					"type": "boolean",
					"default": false,
					"order": 3,
					"markdownDescription": "Automatically enter _Follow Cursor_ mode when launching Ren'Py. This is ignored if `#renpyWarp.renpyExtensionsEnabled#` is set to _Disabled_."
				},
				"renpyWarp.focusWindowOnWarp": {
					"type": "boolean",
					"default": false,
					"order": 4,
					"markdownDescription": "Focus the Ren'Py window after a warp command is executed.\n\nNot supported on Linux. Requires accessibility permissions to be granted to Visual Studio Code on macOS."
				},
				"renpyWarp.editor": {
					"type": "string",
					"default": "launcher/Visual Studio Code (System).edit.py",
					"markdownDescription": "The `Editor` class to supply to `renpy.sh`. Should be a relative or absolute path to an `.edit.py` file.\n\nThis setting is equivalent to the environment variable [`RENPY_EDIT_PY`](https://www.renpy.org/doc/html/editor.html).\n\nRelative paths are resolved from `#renpyWarp.sdkPath#`. For example, a valid value would be [`launcher/System Editor.edit.py`](https://github.com/renpy/renpy/blob/master/launcher/System%20Editor.edit.py).\n\n"
				},
				"renpyWarp.followCursorExecInterval": {
					"type": "integer",
					"default": 40,
					"minimum": 1,
					"markdownDescription": "The interval in milliseconds to execute `renpy.warp_to_line()` when in _Follow Cursor_ mode.\n\nThe lower the value, the more frequently the command is issued, which can feel more responsive at the cost of increased processing.\n\nNeeds a restart to take effect.",
					"scope": "machine-overridable"
				},
				"renpyWarp.socketPorts": {
					"type": "array",
					"default": [
						40111,
						40112,
						40113,
						40114,
						40115,
						40116,
						40117,
						40118,
						40119,
						40120
					],
					"minItems": 1,
					"markdownDescription": "Ports to attempt to use to for the WebSocket server.",
					"scope": "machine-overridable"
				},
				"renpyWarp.renpyExtensionsEnabled": {
					"type": "string",
					"enum": [
						"Not set",
						"Enabled",
						"Disabled"
					],
					"default": "Not set",
					"markdownDescription": "Enable Ren'Py Extension (.rpe) support.",
					"scope": "machine-overridable"
				},
				"renpyWarp.setAutoReloadOnSave": {
					"type": "boolean",
					"default": false,
					"order": 2,
					"markdownDescription": "Enable autoreload in the Ren'Py process when a file is saved."
				}
			}
		}
	},
	"extensionDependencies": [
		"LuqueDaniel.languague-renpy"
	],
	"scripts": {
		"vscode:prepublish": "npm run check-types && npm run lint && node esbuild.js --production",
		"publish": "echo 'use `npm run publish:vsce` or `npm run publish:ovsx` instead'",
		"publish:vsce": "vsce publish",
		"publish:ovsx": "ovsx publish",
		"compile": "npm run check-types && npm run lint && node esbuild.js",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.js --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"package": "vsce package",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"check-types": "tsc --noEmit",
		"lint": "eslint",
		"test": "vscode-test"
	},
	"devDependencies": {
		"@types/adm-zip": "^0.5.5",
		"@types/mocha": "^10.0.6",
		"@types/node": "^20.14.2",
		"@types/semver": "^7.5.8",
		"@types/vscode": "^1.87.0",
		"@types/ws": "^8.5.10",
		"@typescript-eslint/eslint-plugin": "^7.15.0",
		"@typescript-eslint/parser": "^7.15.0",
		"@vscode/test-cli": "^0.0.9",
		"@vscode/test-electron": "^2.3.9",
		"@vscode/vsce": "^2.24.0",
		"esbuild": "^0.23.0",
		"esbuild-plugin-copy": "^2.1.1",
		"eslint": "^8.57.0",
		"npm-run-all": "^4.1.5",
		"ovsx": "^0.9.1",
		"typescript": "^5.5.3"
	},
	"dependencies": {
		"adm-zip": "^0.5.14",
		"get-port": "^7.1.0",
		"glob": "^10.4.5",
		"node-window-manager": "^2.2.4",
		"p-throttle": "^4.1.1",
		"pidtree": "^0.6.0",
		"puka": "^1.0.1",
		"semver": "^7.6.2",
		"untildify": "^4.0.0",
		"upath": "^2.0.1",
		"ws": "^8.18.0"
	}
}
