{
	"name": "renpyWarp",
	"displayName": "Ren'Py Launch and Sync",
	"description": "Keep Ren'Py in sync with your code",
	"version": "0.10.2",
	"publisher": "PaisleySoftworks",
	"icon": "images/eileen.png",
	"engines": {
		"vscode": "^1.87.0"
	},
	"keywords": [
		"renpy"
	],
	"categories": [
		"Other"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/furudean/vscode-renpy-warp.git"
	},
	"activationEvents": [
		"onLanguage:renpy"
	],
	"main": "./extension.js",
	"contributes": {
		"commands": [
			{
				"command": "renpyWarp.warpToLine",
				"title": "Open Ren'Py at line",
				"category": "Ren'Py Launch",
				"icon": "$(play)"
			},
			{
				"command": "renpyWarp.warpToFile",
				"title": "Open Ren'Py at file",
				"category": "Ren'Py Launch",
				"icon": "$(play)"
			},
			{
				"command": "renpyWarp.launch",
				"title": "Launch project in Ren'Py",
				"category": "Ren'Py Launch",
				"icon": "$(play)"
			},
			{
				"command": "renpyWarp.killAll",
				"title": "Kill active Ren'Py instances",
				"category": "Ren'Py Launch"
			},
			{
				"command": "renpyWarp.toggleFollowCursor",
				"title": "Toggle following cursor mode",
				"category": "Ren'Py Launch"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "renpyWarp.warpToLine",
					"when": "editorLangId == renpy"
				},
				{
					"command": "renpyWarp.warpToFile",
					"when": "editorLangId == renpy"
				},
				{
					"command": "renpyWarp.launch",
					"when": "workbenchState == 'folder' || editorLangId == renpy"
				},
				{
					"command": "renpyWarp.killAll",
					"when": "editorLangId == renpy"
				}
			],
			"editor/title/run": [
				{
					"command": "renpyWarp.warpToFile",
					"group": "renpywarp",
					"when": "editorLangId == renpy"
				}
			],
			"editor/context": [
				{
					"command": "renpyWarp.warpToLine",
					"group": "renpywarp"
				}
			],
			"editor/lineNumber/context": [
				{
					"command": "renpyWarp.warpToLine",
					"group": "renpywarp"
				}
			],
			"explorer/context": [
				{
					"command": "renpyWarp.warpToFile",
					"group": "renpywarp"
				}
			]
		},
		"keybindings": [
			{
				"command": "renpyWarp.warpToLine",
				"key": "alt+shift+e",
				"mac": "cmd+shift+e",
				"when": "editorTextFocus && editorLangId == renpy"
			},
			{
				"command": "renpyWarp.warpToFile",
				"key": "alt+shift+f",
				"mac": "cmd+shift+f",
				"when": "editorLangId == renpy"
			},
			{
				"command": "renpyWarp.launch",
				"key": "alt+shift+l",
				"mac": "cmd+shift+l",
				"when": "workbenchState == 'folder' || editorLangId == renpy"
			},
			{
				"command": "renpyWarp.killAll",
				"key": "alt+shift+k",
				"mac": "cmd+shift+k",
				"when": "editorLangId == renpy"
			},
			{
				"command": "renpyWarp.toggleFollowCursor",
				"key": "alt+shift+c",
				"mac": "cmd+shift+c",
				"when": "editorTextFocus && editorLangId == renpy"
			}
		],
		"configuration": {
			"title": "Ren'Py Launch and Sync",
			"properties": {
				"renpyWarp.sdkPath": {
					"type": "string",
					"markdownDescription": "Path to the Ren'Py SDK on this machine. The extension will not work without this set.\n\nThis should be an absolute path, or a path starting with `~` to indicate the home directory.",
					"order": 0,
					"scope": "machine-overridable"
				},
				"renpyWarp.strategy": {
					"type": "string",
					"default": "Auto",
					"markdownDescription": "How to treat an existing Ren'Py instance when a warping command is issued",
					"order": 1,
					"enum": [
						"Auto",
						"Update Window",
						"New Window",
						"Replace Window"
					],
					"markdownEnumDescriptions": [
						"Automatically choose based what features are available in your version of Ren'Py.\n\nIf  `exec.py` is supported, this will use \"Update Window\". Otherwise, it will use \"New Window\".",
						"Execute `renpy.warp_to_line()` in the open instance.\n\nThis requires you to use a version of Ren'Py that supports the `exec.py` feature. As of writing, this only works in nightly builds.",
						"Launch a new instance when a command is executed.",
						"Kill the existing instance and launch a new one."
					]
				},
				"renpyWarp.editor": {
					"type": "string",
					"default": "launcher/Visual Studio Code (System).edit.py",
					"markdownDescription": "The `Editor` class to supply to `renpy.sh`. Should be a relative or absolute path to an `.edit.py` file.\n\nThis setting is equivalent to the environment variable [`RENPY_EDIT_PY`](https://www.renpy.org/doc/html/editor.html).\n\nRelative paths are resolved from `#renpyWarp.sdkPath#`. For example, a valid value would be [`launcher/System Editor.edit.py`](https://github.com/renpy/renpy/blob/master/launcher/System%20Editor.edit.py).\n\n"
				},
				"renpyWarp.followCursorExecInterval": {
					"type": "integer",
					"default": 40,
					"minimum": 1,
					"markdownDescription": "The interval in milliseconds to execute `renpy.warp_to_line()` when in follow cursor mode.\n\nThe lower the value, the more frequently the command is issued, which can feel more responsive at the cost of increased processing.\n\nNeeds a restart to take effect.",
					"scope": "machine-overridable"
				}
			}
		}
	},
	"extensionDependencies": [
		"LuqueDaniel.languague-renpy"
	],
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "vscode-test",
		"package": "vsce package",
		"publish": "vsce publish"
	},
	"devDependencies": {
		"@types/mocha": "^10.0.6",
		"@types/node": "18.x",
		"@types/vscode": "^1.87.0",
		"@vscode/test-cli": "^0.0.6",
		"@vscode/test-electron": "^2.3.9",
		"@vscode/vsce": "^2.24.0",
		"eslint": "^8.56.0",
		"typescript": "^5.3.3"
	},
	"dependencies": {
		"chokidar": "^3.6.0",
		"p-throttle": "^4.1.1",
		"puka": "^1.0.1",
		"untildify": "^4.0.0",
		"upath": "^2.0.1"
	}
}
